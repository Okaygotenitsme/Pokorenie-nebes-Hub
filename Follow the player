--// Random Player Follower with GUI + Smooth Movement + Body Rotation + Respawn Fix
-- Place in StarterPlayerScripts (LocalScript)

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- Wait for PlayerGui
repeat task.wait() until LocalPlayer:FindFirstChild("PlayerGui")

-- === GUI CREATION ===
local gui = Instance.new("ScreenGui")
gui.Name = "FollowerUI"
gui.ResetOnSpawn = false
gui.Parent = LocalPlayer.PlayerGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 250, 0, 190)
frame.Position = UDim2.new(0.5, -125, 0.5, -95)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.BackgroundTransparency = 0.2
frame.Active = true
frame.Parent = gui

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 30)
title.Position = UDim2.new(0, 0, 0, 5)
title.BackgroundTransparency = 1
title.Text = "Player Follower"
title.Font = Enum.Font.SourceSansBold
title.TextScaled = true
title.TextColor3 = Color3.new(1, 1, 1)
title.Parent = frame

local distanceLabel = Instance.new("TextLabel")
distanceLabel.Size = UDim2.new(1, -20, 0, 25)
distanceLabel.Position = UDim2.new(0, 10, 0, 40)
distanceLabel.BackgroundTransparency = 1
distanceLabel.Text = "Follow Distance:"
distanceLabel.TextColor3 = Color3.new(1, 1, 1)
distanceLabel.Font = Enum.Font.SourceSans
distanceLabel.TextScaled = true
distanceLabel.Parent = frame

local distanceBox = Instance.new("TextBox")
distanceBox.Size = UDim2.new(1, -20, 0, 30)
distanceBox.Position = UDim2.new(0, 10, 0, 70)
distanceBox.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
distanceBox.TextColor3 = Color3.new(1, 1, 1)
distanceBox.Font = Enum.Font.SourceSans
distanceBox.TextScaled = true
distanceBox.ClearTextOnFocus = false
distanceBox.Text = "8"
distanceBox.Parent = frame

local startButton = Instance.new("TextButton")
startButton.Size = UDim2.new(1, -20, 0, 35)
startButton.Position = UDim2.new(0, 10, 0, 110)
startButton.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
startButton.TextColor3 = Color3.new(1, 1, 1)
startButton.Font = Enum.Font.SourceSansBold
startButton.TextScaled = true
startButton.Text = "Start Following"
startButton.Parent = frame

local stopButton = Instance.new("TextButton")
stopButton.Size = UDim2.new(1, -20, 0, 35)
stopButton.Position = UDim2.new(0, 10, 0, 150)
stopButton.BackgroundColor3 = Color3.fromRGB(170, 40, 40)
stopButton.TextColor3 = Color3.new(1, 1, 1)
stopButton.Font = Enum.Font.SourceSansBold
stopButton.TextScaled = true
stopButton.Text = "Stop Following"
stopButton.Visible = false
stopButton.Parent = frame

-- === VARIABLES ===
local following = false
local target
local followDistance = 8
local bodyVel
local root

-- === FUNCTIONS ===
local function getRandomPlayer()
	local others = {}
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer then
			table.insert(others, plr)
		end
	end
	if #others == 0 then return nil end
	return others[math.random(1, #others)]
end

local function stopFollowing()
	if bodyVel then
		bodyVel:Destroy()
		bodyVel = nil
	end
	following = false
	target = nil
	frame.Visible = true
	stopButton.Visible = false
	startButton.Visible = true
end

local function setupBodyVelocity()
	if bodyVel then bodyVel:Destroy() end
	bodyVel = Instance.new("BodyVelocity")
	bodyVel.MaxForce = Vector3.new(1e5, 1e5, 1e5)
	bodyVel.Velocity = Vector3.new(0,0,0)
	bodyVel.Parent = root
end

local function startFollowing()
	if following then return end

	target = getRandomPlayer()
	if not target then
		warn("No players to follow.")
		return
	end
	print("Following:", target.Name)

	local value = tonumber(distanceBox.Text)
	if value then
		followDistance = value
	else
		followDistance = 8
	end

	local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	root = char:WaitForChild("HumanoidRootPart")
	setupBodyVelocity()

	following = true
	startButton.Visible = false
	stopButton.Visible = true

	RunService.RenderStepped:Connect(function()
		if not following or not target or not target.Character then return end
		local targetRoot = target.Character:FindFirstChild("HumanoidRootPart")
		if not targetRoot then return end

		-- Move toward target
		local desiredPos = targetRoot.Position - (targetRoot.CFrame.LookVector * followDistance)
		local direction = (desiredPos - root.Position)
		bodyVel.Velocity = direction * 10 -- adjust multiplier for speed

		-- Rotate character to face target smoothly
		local currentCFrame = root.CFrame
		local targetCFrame = CFrame.new(root.Position, targetRoot.Position)
		root.CFrame = currentCFrame:Lerp(targetCFrame, 0.2) -- smooth rotation
	end)
end

-- === RESPAWN HANDLING ===
LocalPlayer.CharacterAdded:Connect(function(char)
	root = char:WaitForChild("HumanoidRootPart")
	if following then
		setupBodyVelocity()
	end
end)

-- === EVENTS ===
startButton.MouseButton1Click:Connect(startFollowing)
stopButton.MouseButton1Click:Connect(stopFollowing)

-- === DRAGGABLE GUI ===
local dragging = false
local dragStart, startPos

frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = frame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
		local delta = input.Position - dragStart
		frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)	target = getRandomPlayer()
	if not target then
		warn("No players to follow.")
		return
	end

	print("Following:", target.Name)

	local value = tonumber(distanceBox.Text)
	if value then
		followDistance = value
	else
		followDistance = 8
	end

	following = true
	startButton.Visible = false
	stopButton.Visible = true

	local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	local root = char:WaitForChild("HumanoidRootPart")

	connection = RunService.RenderStepped:Connect(function()
		if not following or not target.Character then return end
		local targetRoot = target.Character:FindFirstChild("HumanoidRootPart")
		if not targetRoot then return end
		local desiredPos = targetRoot.Position - (targetRoot.CFrame.LookVector * followDistance)
		root.CFrame = CFrame.new(desiredPos, targetRoot.Position)
	end)
end

-- === EVENT CONNECTIONS ===
startButton.MouseButton1Click:Connect(startFollowing)
stopButton.MouseButton1Click:Connect(stopFollowing)

-- === MAKE FRAME DRAGGABLE (WORKS ON PC & MOBILE) ===
local dragging = false
local dragStart, startPos

frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = frame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
		local delta = input.Position - dragStart
		frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)
