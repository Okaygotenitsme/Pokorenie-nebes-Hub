-- Player Follower GUI + Random/Specific Target + Stop Button Replacement + Minimize + Draggable + Signature + Error Message
-- LocalScript in StarterPlayerScripts

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

repeat task.wait() until LocalPlayer:FindFirstChild("PlayerGui")

-- === GUI CREATION ===
local gui = Instance.new("ScreenGui")
gui.Name = "FollowerUI"
gui.ResetOnSpawn = false
gui.Parent = LocalPlayer.PlayerGui

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 280, 0, 350)
frame.Position = UDim2.new(0.5, -140, 0.5, -175)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.BackgroundTransparency = 0.2
frame.Active = true
frame.Parent = gui

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -40, 0, 30)
title.Position = UDim2.new(0, 0, 0, 5)
title.BackgroundTransparency = 1
title.Text = "Player Follower"
title.Font = Enum.Font.SourceSansBold
title.TextScaled = true
title.TextColor3 = Color3.new(1, 1, 1)
title.TextXAlignment = Enum.TextXAlignment.Left
title.Parent = frame

-- Minimize Button
local minimizeButton = Instance.new("TextButton")
minimizeButton.Size = UDim2.new(0, 30, 0, 30)
minimizeButton.Position = UDim2.new(1, -35, 0, 5)
minimizeButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
minimizeButton.Text = "-"
minimizeButton.Font = Enum.Font.SourceSansBold
minimizeButton.TextScaled = true
minimizeButton.TextColor3 = Color3.new(1, 1, 1)
minimizeButton.Parent = frame

-- Signature
local signature = Instance.new("TextLabel")
signature.Size = UDim2.new(1, -20, 0, 20)
signature.Position = UDim2.new(0, 10, 1, -25)
signature.BackgroundTransparency = 1
signature.Text = "Made by: Meloten / Pokorenie nebes"
signature.TextColor3 = Color3.fromRGB(200, 200, 200)
signature.Font = Enum.Font.SourceSansItalic
signature.TextScaled = true
signature.TextXAlignment = Enum.TextXAlignment.Right
signature.Parent = frame

-- Error Message Label
local messageLabel = Instance.new("TextLabel")
messageLabel.Size = UDim2.new(1, -20, 0, 25)
messageLabel.Position = UDim2.new(0, 10, 0, 285)
messageLabel.BackgroundTransparency = 1
messageLabel.Text = ""
messageLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
messageLabel.Font = Enum.Font.SourceSansBold
messageLabel.TextScaled = true
messageLabel.TextWrapped = true
messageLabel.Parent = frame

-- Follow Distance
local distanceLabel = Instance.new("TextLabel")
distanceLabel.Size = UDim2.new(1, -20, 0, 25)
distanceLabel.Position = UDim2.new(0, 10, 0, 40)
distanceLabel.BackgroundTransparency = 1
distanceLabel.Text = "Follow Distance:"
distanceLabel.TextColor3 = Color3.new(1, 1, 1)
distanceLabel.Font = Enum.Font.SourceSans
distanceLabel.TextScaled = true
distanceLabel.Parent = frame

local distanceBox = Instance.new("TextBox")
distanceBox.Size = UDim2.new(1, -20, 0, 30)
distanceBox.Position = UDim2.new(0, 10, 0, 70)
distanceBox.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
distanceBox.TextColor3 = Color3.new(1, 1, 1)
distanceBox.Font = Enum.Font.SourceSans
distanceBox.TextScaled = true
distanceBox.ClearTextOnFocus = false
distanceBox.Text = "8"
distanceBox.Parent = frame

-- Random Player Button
local randomButton = Instance.new("TextButton")
randomButton.Size = UDim2.new(1, -20, 0, 35)
randomButton.Position = UDim2.new(0, 10, 0, 110)
randomButton.BackgroundColor3 = Color3.fromRGB(50, 150, 50)
randomButton.TextColor3 = Color3.new(1, 1, 1)
randomButton.Font = Enum.Font.SourceSansBold
randomButton.TextScaled = true
randomButton.Text = "Follow Random Player"
randomButton.Parent = frame

-- Specific Player Label & Box
local specificLabel = Instance.new("TextLabel")
specificLabel.Size = UDim2.new(1, -20, 0, 20)
specificLabel.Position = UDim2.new(0, 10, 0, 155)
specificLabel.BackgroundTransparency = 1
specificLabel.Text = "Enter username to follow:"
specificLabel.TextColor3 = Color3.new(1, 1, 1)
specificLabel.Font = Enum.Font.SourceSans
specificLabel.TextScaled = true
specificLabel.Parent = frame

local specificBox = Instance.new("TextBox")
specificBox.Size = UDim2.new(1, -20, 0, 30)
specificBox.Position = UDim2.new(0, 10, 0, 175)
specificBox.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
specificBox.TextColor3 = Color3.new(1, 1, 1)
specificBox.Font = Enum.Font.SourceSans
specificBox.TextScaled = true
specificBox.ClearTextOnFocus = false
specificBox.PlaceholderText = "Exact username here"
specificBox.Parent = frame

-- Specific Player Button
local specificButton = Instance.new("TextButton")
specificButton.Size = UDim2.new(1, -20, 0, 35)
specificButton.Position = UDim2.new(0, 10, 0, 210)
specificButton.BackgroundColor3 = Color3.fromRGB(50, 120, 200)
specificButton.TextColor3 = Color3.new(1, 1, 1)
specificButton.Font = Enum.Font.SourceSansBold
specificButton.TextScaled = true
specificButton.Text = "Follow Specific Player"
specificButton.Parent = frame

-- Stop Button
local stopButton = Instance.new("TextButton")
stopButton.Size = UDim2.new(1, -20, 0, 35)
stopButton.Position = UDim2.new(0, 10, 0, 250)
stopButton.BackgroundColor3 = Color3.fromRGB(170, 40, 40)
stopButton.TextColor3 = Color3.new(1, 1, 1)
stopButton.Font = Enum.Font.SourceSansBold
stopButton.TextScaled = true
stopButton.Text = "Stop Following"
stopButton.Visible = false
stopButton.Parent = frame

-- === VARIABLES ===
local following = false
local target
local followDistance = 8
local root
local followConnection

-- === FUNCTIONS ===
local function showMessage(text, duration)
	messageLabel.Text = text
	task.delay(duration or 2, function()
		if messageLabel then
			messageLabel.Text = ""
		end
	end)
end

local function getRandomPlayer()
	local others = {}
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer then
			table.insert(others, plr)
		end
	end
	if #others == 0 then return nil end
	return others[math.random(1, #others)]
end

local function getPlayerByName(name)
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr.Name:lower() == name:lower() then
			return plr
		end
	end
	return nil
end

local function stopFollowing()
	if followConnection then
		followConnection:Disconnect()
		followConnection = nil
	end
	following = false
	target = nil
	randomButton.Visible = true
	specificButton.Visible = true
	stopButton.Visible = false
end

local function startFollowing(playerTarget, startButton)
	if following then return end
	target = playerTarget
	if not target then
		showMessage("Such player not found, check if you wrote your nickname correctly.")
		return
	end

	local value = tonumber(distanceBox.Text)
	if value then followDistance = value end

	local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	root = char:WaitForChild("HumanoidRootPart")

	following = true

	-- Hide the button that started the follow
	startButton.Visible = false

	-- Move stopButton to same position
	stopButton.Position = startButton.Position
	stopButton.Visible = true

	if followConnection then
		followConnection:Disconnect()
	end

	followConnection = RunService.RenderStepped:Connect(function()
		if not following or not target or not target.Character or not root then return end
		local targetRoot = target.Character:FindFirstChild("HumanoidRootPart")
		if not targetRoot then return end

		local desiredPos = targetRoot.Position - (targetRoot.CFrame.LookVector * followDistance)
		local targetCFrame = CFrame.new(desiredPos, targetRoot.Position)
		root.CFrame = root.CFrame:Lerp(targetCFrame, 0.25)
	end)
end

-- === RESPAWN HANDLING ===
LocalPlayer.CharacterAdded:Connect(function(char)
	root = char:WaitForChild("HumanoidRootPart")
end)

-- === BUTTON EVENTS ===
randomButton.MouseButton1Click:Connect(function()
	startFollowing(getRandomPlayer(), randomButton)
end)

specificButton.MouseButton1Click:Connect(function()
	local plr = getPlayerByName(specificBox.Text)
	if plr then
		startFollowing(plr, specificButton)
	else
		showMessage("Such player not found, check if you wrote your nickname correctly.")
	end
end)

stopButton.MouseButton1Click:Connect(stopFollowing)

-- === MINIMIZE LOGIC ===
local minimized = false
minimizeButton.MouseButton1Click:Connect(function()
	minimized = not minimized
	for _, obj in ipairs(frame:GetChildren()) do
		if obj ~= title and obj ~= minimizeButton and obj ~= signature then
			obj.Visible = not minimized
		end
	end
	if minimized then
		frame.Size = UDim2.new(0, 280, 0, 40)
	else
		frame.Size = UDim2.new(0, 280, 0, 350)
	end
end)

-- === DRAGGABLE GUI ===
local dragging = false
local dragStart, startPos
frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = frame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
		local delta = input.Position - dragStart
		frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)specificBox.Position = UDim2.new(0, 10, 0, 175)
specificBox.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
specificBox.TextColor3 = Color3.new(1, 1, 1)
specificBox.Font = Enum.Font.SourceSans
specificBox.TextScaled = true
specificBox.ClearTextOnFocus = false
specificBox.PlaceholderText = "Exact username here"
specificBox.Parent = frame

-- Follow Specific Button
local specificButton = Instance.new("TextButton")
specificButton.Size = UDim2.new(1, -20, 0, 35)
specificButton.Position = UDim2.new(0, 10, 0, 210)
specificButton.BackgroundColor3 = Color3.fromRGB(50, 120, 200)
specificButton.TextColor3 = Color3.new(1, 1, 1)
specificButton.Font = Enum.Font.SourceSansBold
specificButton.TextScaled = true
specificButton.Text = "Follow Specific Player"
specificButton.Parent = frame

-- Stop Button
local stopButton = Instance.new("TextButton")
stopButton.Size = UDim2.new(1, -20, 0, 35)
stopButton.Position = UDim2.new(0, 10, 0, 250)
stopButton.BackgroundColor3 = Color3.fromRGB(170, 40, 40)
stopButton.TextColor3 = Color3.new(1, 1, 1)
stopButton.Font = Enum.Font.SourceSansBold
stopButton.TextScaled = true
stopButton.Text = "Stop Following"
stopButton.Visible = false
stopButton.Parent = frame

-- Signature Label
local signature = Instance.new("TextLabel")
signature.Size = UDim2.new(1, -20, 0, 20)
signature.Position = UDim2.new(0, 10, 1, -25)
signature.BackgroundTransparency = 1
signature.Text = "Made by: Meloten / Pokorenie nebes"
signature.TextColor3 = Color3.fromRGB(200, 200, 200)
signature.Font = Enum.Font.SourceSansItalic
signature.TextScaled = true
signature.TextXAlignment = Enum.TextXAlignment.Right
signature.Parent = frame

-- === VARIABLES ===
local following = false
local target
local followDistance = 8
local root
local followConnection

-- === FUNCTIONS ===
local function getRandomPlayer()
	local others = {}
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer then
			table.insert(others, plr)
		end
	end
	if #others == 0 then return nil end
	return others[math.random(1, #others)]
end

local function getPlayerByName(name)
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr.Name:lower() == name:lower() then
			return plr
		end
	end
	return nil
end

local function stopFollowing()
	if followConnection then
		followConnection:Disconnect()
		followConnection = nil
	end
	following = false
	target = nil
	randomButton.Visible = true
	specificButton.Visible = true
	stopButton.Visible = false
end

local function startFollowing(playerTarget)
	if following then return end
	target = playerTarget
	if not target then
		warn("Target not found.")
		return
	end

	local value = tonumber(distanceBox.Text)
	if value then followDistance = value end

	local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	root = char:WaitForChild("HumanoidRootPart")

	following = true
	randomButton.Visible = false
	specificButton.Visible = false
	stopButton.Visible = true

	if followConnection then
		followConnection:Disconnect()
	end

	followConnection = RunService.RenderStepped:Connect(function()
		if not following or not target or not target.Character or not root then return end
		local targetRoot = target.Character:FindFirstChild("HumanoidRootPart")
		if not targetRoot then return end

		local desiredPos = targetRoot.Position - (targetRoot.CFrame.LookVector * followDistance)
		local targetCFrame = CFrame.new(desiredPos, targetRoot.Position)
		root.CFrame = root.CFrame:Lerp(targetCFrame, 0.25)
	end)
end

-- === RESPAWN HANDLING ===
LocalPlayer.CharacterAdded:Connect(function(char)
	root = char:WaitForChild("HumanoidRootPart")
end)

-- === BUTTON EVENTS ===
randomButton.MouseButton1Click:Connect(function()
	startFollowing(getRandomPlayer())
end)

specificButton.MouseButton1Click:Connect(function()
	local plr = getPlayerByName(specificBox.Text)
	if plr then
		startFollowing(plr)
	else
		warn("Player not found: " .. specificBox.Text)
	end
end)

stopButton.MouseButton1Click:Connect(stopFollowing)

-- === DRAGGABLE GUI ===
local dragging = false
local dragStart, startPos

frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = frame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
		local delta = input.Position - dragStart
		frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)
	target = getRandomPlayer()
	if not target then
		warn("No players to follow.")
		return
	end

	local value = tonumber(distanceBox.Text)
	if value then followDistance = value end

	local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
	root = char:WaitForChild("HumanoidRootPart")

	following = true
	startButton.Visible = false
	stopButton.Visible = true

	if followConnection then
		followConnection:Disconnect()
	end

	followConnection = RunService.RenderStepped:Connect(function()
		if not following or not target or not target.Character or not root then return end
		local targetRoot = target.Character:FindFirstChild("HumanoidRootPart")
		if not targetRoot then return end

		-- Desired position behind target
		local desiredPos = targetRoot.Position - (targetRoot.CFrame.LookVector * followDistance)

		-- Smoothly move and rotate character
		local targetCFrame = CFrame.new(desiredPos, targetRoot.Position)
		root.CFrame = root.CFrame:Lerp(targetCFrame, 0.25)
	end)
end

-- === RESPAWN HANDLING ===
LocalPlayer.CharacterAdded:Connect(function(char)
	root = char:WaitForChild("HumanoidRootPart")
	if following then
		-- Nothing extra needed; RenderStepped will pick up new root
	end
end)

-- === EVENTS ===
startButton.MouseButton1Click:Connect(startFollowing)
stopButton.MouseButton1Click:Connect(stopFollowing)

-- === DRAGGABLE GUI ===
local dragging = false
local dragStart, startPos

frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = frame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
		local delta = input.Position - dragStart
		frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)
