local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
   Name = "Pokorenie nebes Hub | The Strongest Battlegrounds",
   Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
   LoadingTitle = "Pokorenie nebes Hub",
   LoadingSubtitle = "by Meloten",
   ShowText = "Rayfield", -- for mobile users to unhide rayfield, change if you'd like
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   ToggleUIKeybind = "K", -- The keybind to toggle the UI visibility (string like "K" or Enum.KeyCode)

   DisableRayfieldPrompts = false,
   DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Big Hub"
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = false, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

if CurrentValue = true then
_G.SafeZoneClick = true

if CurrentValue = false then
_G.SafeZoneClick = false

function SafeZone()
while _G.SafeZoneClick == true do
-- LocalScript inside StarterPlayerScripts
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local PlayerGui = player:WaitForChild("PlayerGui")

-- === SETTINGS ===
local HEALTH_TRIGGER = 0.25      -- 25% HP for auto-remove
local HEALTH_REMOVE = 0.7        -- 70% HP
local SAFE_OFFSET = Vector3.new(0, 60, 0)
local PLATFORM_SIZE = Vector3.new(200, 5, 200)
local PLATFORM_COLOR = Color3.fromRGB(0, 255, 0)
local PLATFORM_TRANSPARENCY = 0.6
local TELEPORT_DELAY = 0.15
local STAY_RADIUS = 20
local EXIT_KEY = Enum.KeyCode.G
-- =================

local safeBlock
local stayCheckConnection
local exitGui
local confirmGui
local returnGui
local creditsGui
local onPlatform = false
local manualExit = false
local fullHealthBefore = true -- tracks if player was at full health

----------------------------------------------------
-- UI HELPERS
----------------------------------------------------
local function createCredits()
	if creditsGui then creditsGui:Destroy() end
	local gui = Instance.new("ScreenGui")
	gui.Name = "CreditsGui"
	gui.ResetOnSpawn = false
	gui.Parent = PlayerGui

	local text = Instance.new("TextLabel")
	text.Size = UDim2.new(0, 260, 0, 30)
	text.Position = UDim2.new(1, -270, 1, -40)
	text.BackgroundTransparency = 1
	text.Text = "Made by: Meloten / Pokorenie nebes"
	text.TextColor3 = Color3.fromRGB(255, 255, 255)
	text.TextTransparency = 0.3
	text.TextScaled = true
	text.Font = Enum.Font.SourceSansBold
	text.Parent = gui

	creditsGui = gui
end

local function createConfirmDialog(textMessage, onConfirm)
	if confirmGui then confirmGui:Destroy() end

	local gui = Instance.new("ScreenGui")
	gui.Name = "ConfirmGui"
	gui.ResetOnSpawn = false
	gui.Parent = PlayerGui

	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 250, 0, 140)
	frame.Position = UDim2.new(0.5, -125, 0.5, -70)
	frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	frame.BackgroundTransparency = 0.1
	frame.BorderSizePixel = 0
	frame.Parent = gui

	local text = Instance.new("TextLabel")
	text.Size = UDim2.new(1, -20, 0, 60)
	text.Position = UDim2.new(0, 10, 0, 10)
	text.BackgroundTransparency = 1
	text.Text = textMessage
	text.TextWrapped = true
	text.TextColor3 = Color3.fromRGB(255, 255, 255)
	text.TextScaled = true
	text.Parent = frame

	local yes = Instance.new("TextButton")
	yes.Size = UDim2.new(0.45, 0, 0, 40)
	yes.Position = UDim2.new(0.05, 0, 1, -50)
	yes.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
	yes.TextColor3 = Color3.fromRGB(255, 255, 255)
	yes.Text = "Yes"
	yes.TextScaled = true
	yes.Parent = frame

	local no = Instance.new("TextButton")
	no.Size = UDim2.new(0.45, 0, 0, 40)
	no.Position = UDim2.new(0.5, 0, 1, -50)
	no.BackgroundColor3 = Color3.fromRGB(170, 0, 0)
	no.TextColor3 = Color3.fromRGB(255, 255, 255)
	no.Text = "No"
	no.TextScaled = true
	no.Parent = frame

	yes.MouseButton1Click:Connect(function()
		gui:Destroy()
		onConfirm(true)
	end)
	no.MouseButton1Click:Connect(function()
		gui:Destroy()
		onConfirm(false)
	end)

	confirmGui = gui
end

local function createExitButton(onPress)
	if exitGui then exitGui:Destroy() end

	local gui = Instance.new("ScreenGui")
	gui.Name = "ExitGui"
	gui.ResetOnSpawn = false
	gui.Parent = PlayerGui

	local button = Instance.new("TextButton")
	button.Size = UDim2.new(0, 150, 0, 50)
	button.Position = UDim2.new(0, 20, 0, 20)
	button.BackgroundColor3 = Color3.fromRGB(255, 70, 70)
	button.TextColor3 = Color3.fromRGB(255, 255, 255)
	button.TextScaled = true
	button.Text = "Leave Platform"
	button.Parent = gui

	local dragging, dragStart, startPos
	local function update(input)
		local delta = input.Position - dragStart
		button.Position = UDim2.new(
			startPos.X.Scale,
			startPos.X.Offset + delta.X,
			startPos.Y.Scale,
			startPos.Y.Offset + delta.Y
		)
	end
	button.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = button.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then dragging = false end
			end)
		end
	end)
	button.InputChanged:Connect(function(input)
		if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
			update(input)
		end
	end)

	button.MouseButton1Click:Connect(function()
		createConfirmDialog("Are you sure you want to leave the platform?", function(confirm)
			if confirm then
				removeSafeBlock()
				manualExit = true
			end
		end)
	end)

	exitGui = gui
end

local function createReturnButton(onPress)
	if returnGui then returnGui:Destroy() end
	local gui = Instance.new("ScreenGui")
	gui.Name = "ReturnGui"
	gui.ResetOnSpawn = false
	gui.Parent = PlayerGui

	local button = Instance.new("TextButton")
	button.Size = UDim2.new(0, 250, 0, 50)
	button.Position = UDim2.new(0.5, -125, 0.8, 0)
	button.BackgroundColor3 = Color3.fromRGB(70, 130, 255)
	button.TextColor3 = Color3.fromRGB(255, 255, 255)
	button.TextScaled = true
	button.Text = "Do you want to return to the platform?"
	button.Parent = gui

	button.MouseButton1Click:Connect(function()
		removeReturnButton()
		onPress()
	end)

	returnGui = gui
end

function removeReturnButton()
	if returnGui then returnGui:Destroy() returnGui = nil end
end

----------------------------------------------------
-- PLATFORM LOGIC
----------------------------------------------------
local function removeSafeBlock()
	if safeBlock then safeBlock:Destroy() safeBlock = nil end
	if stayCheckConnection then stayCheckConnection:Disconnect() stayCheckConnection = nil end
	if exitGui then exitGui:Destroy() exitGui = nil end
	onPlatform = false
end

local function createSafeBlock(position)
	local part = Instance.new("Part")
	part.Size = PLATFORM_SIZE
	part.Anchored = true
	part.CanCollide = true
	part.Color = PLATFORM_COLOR
	part.Transparency = PLATFORM_TRANSPARENCY
	part.Material = Enum.Material.ForceField
	part.Name = "SafeBlock"
	part.CFrame = CFrame.new(position)
	part.Parent = workspace
	return part
end

local function teleportToPlatform(char)
	local root = char:WaitForChild("HumanoidRootPart")
	local safePosition = root.Position + SAFE_OFFSET
	if not safeBlock then
		safeBlock = createSafeBlock(safePosition)
	end
	task.wait(TELEPORT_DELAY)
	root.CFrame = CFrame.new(safePosition + Vector3.new(0, PLATFORM_SIZE.Y/2+3, 0))
	createExitButton(function()
		removeSafeBlock()
		manualExit = true
	end)
	onPlatform = true

	stayCheckConnection = RunService.Heartbeat:Connect(function()
		if not safeBlock or not char.Parent then return end
		local dist = (root.Position - safeBlock.Position).Magnitude
		if dist > STAY_RADIUS then
			root.CFrame = CFrame.new(safeBlock.Position + Vector3.new(0, PLATFORM_SIZE.Y/2+3, 0))
		end
	end)
end

local function onCharacterAdded(char)
	local humanoid = char:WaitForChild("Humanoid")
	onPlatform = false
	manualExit = false
	fullHealthBefore = true

	humanoid.HealthChanged:Connect(function(health)
		local ratio = health / humanoid.MaxHealth

		-- Detect first damage from full health
		if fullHealthBefore and ratio < 1 then
			teleportToPlatform(char)
			fullHealthBefore = false
		end

		-- If manual exit and player loses any health, show return button
		if manualExit and ratio < 1 then
			createReturnButton(function()
				manualExit = false
				teleportToPlatform(char)
			end)
		end

		-- Auto remove platform when healed above threshold
		if ratio >= HEALTH_REMOVE then
			removeSafeBlock()
			fullHealthBefore = true
		end
	end)
end

----------------------------------------------------
-- INPUT HANDLING
----------------------------------------------------
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == EXIT_KEY and onPlatform and not confirmGui then
		createConfirmDialog("Are you sure you want to leave the platform?", function(confirm)
			if confirm then
				removeSafeBlock()
				manualExit = true
			end
		end)
	end
end)

local MainTab = Window:CreateTab("Main", 4483362458) -- Title, Image
local MainSection = MainTab:CreateSection("Main")

local PlayerTab = Window:CreateTab("Player", 4483362458) -- Title, Image
local PlayerSection = PlayerTab:CreateSection("Player")

local SafeZoneToggle = MainTab:CreateToggle({
   Name = "Auto tp to safe zone",
   CurrentValue = false,
   Flag = "Safe zone", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(SafeV)
_G.SafeZoneClick = SafeV
SafeZone()
   end,
})

local AimButton = MainTab:CreateButton({
   Name = "Auto aim",
   Callback = function()
     loadstring(game:HttpGet("https://pastebin.com/raw/CdWYSbRc"))()
   end,
})

local ESPButton = MainTab:CreateButton({
   Name = "ESP",
   Callback = function()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer

-- SETTINGS
local CUBE_COLOR = Color3.fromRGB(255, 0, 0)
local LINE_COLOR = Color3.fromRGB(255, 0, 0)
local LINE_THICKNESS = 0.2
local CUBE_SIZE = Vector3.new(5, 6, 3)

-- FOLDER FOR VISUALS
local visualsFolder = workspace:FindFirstChild("PlayerVisuals") or Instance.new("Folder")
visualsFolder.Name = "PlayerVisuals"
visualsFolder.Parent = workspace

local visuals = {}

-- UTILITY FUNCTION
local function safeDestroy(obj)
	if obj and obj.Parent then
		obj:Destroy()
	end
end

-- LOCAL ATTACHMENT FOR BEAMS
local function ensureLocalAttachment()
	local char = LocalPlayer.Character
	if not char then return nil end
	local root = char:FindFirstChild("HumanoidRootPart")
	if not root then return nil end
	local att = root:FindFirstChild("ESP_LocalAttachment")
	if not att then
		att = Instance.new("Attachment")
		att.Name = "ESP_LocalAttachment"
		att.Parent = root
	end
	return att
end

-- CREATE BILLBOARD (NAME + HEALTH)
local function createBillboard(player, humanoid)
	local billboard = Instance.new("BillboardGui")
	billboard.Name = player.Name .. "_Billboard"
	billboard.AlwaysOnTop = true
	billboard.Size = UDim2.new(0, 200, 0, 40)
	billboard.StudsOffset = Vector3.new(0, 5, 0)

	local nameLabel = Instance.new("TextLabel")
	nameLabel.BackgroundTransparency = 1
	nameLabel.Size = UDim2.new(1, 0, 0.5, 0)
	nameLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	nameLabel.TextStrokeTransparency = 0
	nameLabel.Font = Enum.Font.GothamBold
	nameLabel.TextScaled = true
	nameLabel.Text = player.DisplayName
	nameLabel.Parent = billboard

	local healthLabel = Instance.new("TextLabel")
	healthLabel.BackgroundTransparency = 1
	healthLabel.Position = UDim2.new(0, 0, 0.5, 0)
	healthLabel.Size = UDim2.new(1, 0, 0.5, 0)
	healthLabel.TextColor3 = Color3.fromRGB(255, 80, 80)
	healthLabel.TextStrokeTransparency = 0
	healthLabel.Font = Enum.Font.GothamBold
	healthLabel.TextScaled = true
	healthLabel.Text = "Health: 0"
	healthLabel.Parent = billboard

	humanoid.HealthChanged:Connect(function()
		healthLabel.Text = "Health: " .. math.floor(humanoid.Health)
	end)
	healthLabel.Text = "Health: " .. math.floor(humanoid.Health)

	return billboard
end

-- REMOVE OLD VISUALS
local function removeVisualsForPlayer(player)
	local v = visuals[player]
	if not v then return end
	for _, obj in pairs(v) do safeDestroy(obj) end
	visuals[player] = nil
end

-- CREATE VISUALS FOR PLAYER
local function createVisualsForPlayer(player)
	if player == LocalPlayer then return end

	local character = player.Character or player.CharacterAdded:Wait()
	local root = character:WaitForChild("HumanoidRootPart")
	local humanoid = character:WaitForChild("Humanoid")

	removeVisualsForPlayer(player)

	-- CUBE (BoxHandleAdornment)
	local cubeAdornment = Instance.new("BoxHandleAdornment")
	cubeAdornment.Name = player.Name .. "_ESP_Cube"
	cubeAdornment.Adornee = root
	cubeAdornment.AlwaysOnTop = true
	cubeAdornment.Size = CUBE_SIZE
	cubeAdornment.Color3 = CUBE_COLOR
	cubeAdornment.Transparency = 0.5
	cubeAdornment.ZIndex = 10
	cubeAdornment.Parent = visualsFolder

	-- BEAM
	local localAttach = ensureLocalAttachment()
	local attachCube = Instance.new("Attachment")
	attachCube.Parent = root

	local beam = Instance.new("Beam")
	beam.Name = player.Name .. "_ESP_Beam"
	beam.Attachment0 = attachCube
	beam.Attachment1 = localAttach
	beam.Color = ColorSequence.new(LINE_COLOR)
	beam.Transparency = NumberSequence.new(0.3)
	beam.Width0 = LINE_THICKNESS
	beam.Width1 = LINE_THICKNESS
	beam.FaceCamera = true
	beam.LightEmission = 1
	beam.Parent = visualsFolder

	-- BILLBOARD
	local billboard = createBillboard(player, humanoid)
	billboard.Parent = root

	-- STORE VISUALS
	visuals[player] = { cube = cubeAdornment, beam = beam, billboard = billboard }
end

-- HANDLE LOCAL PLAYER RESPAWN (BEAM ATTACHMENT)
LocalPlayer.CharacterAdded:Connect(function()
	task.wait(0.2)
	local localAttach = ensureLocalAttachment()
	for _, v in pairs(visuals) do
		if v.beam then
			v.beam.Attachment1 = localAttach
		end
	end
end)

-- SETUP PLAYER (JOIN + RESPAWN)
local function setupPlayer(player)
	player.CharacterAdded:Connect(function()
		task.wait(0.1)
		createVisualsForPlayer(player)
	end)
	player.CharacterRemoving:Connect(function()
		removeVisualsForPlayer(player)
	end)
	if player.Character then
		createVisualsForPlayer(player)
	end
end

-- PLAYER EVENTS
Players.PlayerAdded:Connect(setupPlayer)
Players.PlayerRemoving:Connect(removeVisualsForPlayer)

-- INITIALIZE EXISTING PLAYERS
for _, player in ipairs(Players:GetPlayers()) do
	if player ~= LocalPlayer then
		setupPlayer(player)
	end
end

-- ADD ON-SCREEN CREDIT
local StarterGui = game:GetService("StarterGui")
local creditGui = Instance.new("ScreenGui")
creditGui.Name = "ESP_CreditGUI"
creditGui.ResetOnSpawn = false
creditGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local creditLabel = Instance.new("TextLabel")
creditLabel.Size = UDim2.new(0, 300, 0, 30)
creditLabel.Position = UDim2.new(0, 10, 0, 10)
creditLabel.BackgroundTransparency = 1
creditLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
creditLabel.TextStrokeTransparency = 0
creditLabel.Font = Enum.Font.GothamBold
creditLabel.TextScaled = true
creditLabel.Text = "Made by: Meloten/Pokorenie nebes"
creditLabel.Parent = creditGui
   end,
})

local BlenderButton = MainTab:CreateButton({
   Name = "Blender Follow the player",
   Callback = function()
     loadstring(game:HttpGet("https://pastebin.com/raw/f1Ep33jB"))()
   end,
})

local FollowerButton = MainTab:CreateButton({
   Name = "Follow the player",
   Callback = function()
     loadstring(game:HttpGet("https://pastebin.com/raw/t7N9926H"))()
   end,
})

local Button = PlayerTab:CreateButton({
   Name = "Goku moveset",
   Callback = function()
     loadstring(game:HttpGet("https://pastebin.com/raw/32Vs1U6V"))()
   end,
})

local ClickButton = PlayerTab:CreateButton({
   Name = "Flight",
   Callback = function()
     loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Invinicible-Flight-R15-45414"))()
   end,
})

local SharinganButton = MainTab:CreateButton({
   Name = "Sharingan",
   Callback = function()
     loadstring(game:HttpGet("https://raw.githubusercontent.com/Okaygotenitsme/Pokorenie-nebes-Hub/refs/heads/main/Sharingan"))()
   end,
})

local SpeedSlider = PlayerTab:CreateSlider({
   Name = "Walk Speed Slider",
   Range = {0, 500},
   Increment = 1,
   Suffix = "Speed power",
   CurrentValue = 16,
   Flag = "Flag2", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = (Value)
   end,
})

local JumpSlider = PlayerTab:CreateSlider({
   Name = "Jump Power Slider",
   Range = {0, 300},
   Increment = 1,
   Suffix = "Jump power",
   CurrentValue = 1,
   Flag = "Flag1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
      game.Players.LocalPlayer.Character.Humanoid.JumpPower = (Value)
   end,
})
